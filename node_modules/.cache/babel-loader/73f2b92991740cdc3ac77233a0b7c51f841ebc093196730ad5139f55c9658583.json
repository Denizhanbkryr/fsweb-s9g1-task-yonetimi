{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deniz\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(_ref) {\n  _s();\n  var _errors$title;\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: [],\n      id: nanoid(5)\n    },\n    mode: \"onChange\"\n  });\n  const onSubmit = (data, event) => {\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n    event.target.reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"title\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: formErrors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            onChange: handleCheckboxChange,\n            checked: formData.people.includes(p)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: formErrors.people\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: buttonDisabled,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n/*const notify = () => toast(\"Wow so easy!\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n  } = useForm({\r\n    defaultValues: {\r\n      isim: \"\",\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    submitFn({\r\n      ...formData,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\",\r\n    })\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label>\r\n        Başlık:\r\n        <input\r\n          rows=\"1\"\r\n          id=\"başlık\"\r\n          name=\"başlık\"\r\n          {...register(\"başlık\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Başlık en az 3 karakter içermelidir\",\r\n            },\r\n          })}\r\n        ></input>\r\n      </label>\r\n      {errors.mesaj && <p>{errors.mesaj.message}</p>}\r\n\r\n      <label>\r\n        Açıklama:\r\n        <textarea\r\n          rows=\"3\"\r\n          id=\"açıklama\"\r\n          name=\"açıklama\"\r\n          {...register(\"açıklama\", {\r\n            required: \"Açıklama boş bırakılamaz\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Açıklama en az 10 karakter içermelidir\",\r\n            },\r\n          })}\r\n        ></textarea>\r\n      </label>\r\n      {errors.açıklama && <p>{errors.açıklama.message}</p>}\r\n      <div>\r\n        <button type=\"submit\" disabled={!isValid} onClick={notify}>\r\n          Gönder\r\n        </button>\r\n        <ToastContainer />\r\n      </div>\r\n\r\n      <label>\r\n        İsim:\r\n        <input\r\n          type=\"text\"\r\n          name=\"isim\"\r\n          {...register(\"isim\", { required: \"İsim boş bırakılamaz\" })}\r\n        />\r\n      </label>\r\n      <div>\r\n        <button type=\"submit\" onClick={notify}>\r\n          Gönder\r\n        </button>\r\n        <ToastContainer />\r\n      </div>\r\n\r\n      {errors.isim && <p>{errors.isim.message}</p>}\r\n    </form>\r\n  );*/\n_s(TaskHookForm, \"MIUZaUiL7E7/wd/S6ZyTHFJbXEU=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["nanoid","React","useForm","ToastContainer","toast","TaskHookForm","kisiler","submitFn","register","handleSubmit","formState","errors","isValid","defaultValues","title","description","people","id","mode","onSubmit","data","event","status","target","reset","required","minLength","value","message","formErrors","map","p","handleCheckboxChange","formData","includes","buttonDisabled"],"sources":["C:/Users/deniz/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function TaskHookForm({ kisiler, submitFn }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n  } = useForm({\r\n    defaultValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n      id: nanoid(5),\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = (data, event) => {\r\n    submitFn({\r\n      ...data,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\",\r\n    });\r\n    event.target.reset();\r\n  };\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Task başlığı en az 3 karakter olmalı\",\r\n            },\r\n          })}\r\n        />\r\n        <p className=\"input-error\">{errors.title?.message}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          {...register(\"title\", {\r\n            required: \"Task açıklaması yazmalısınız\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Task açıklaması en az 10 karakter olmalı\",\r\n            },\r\n          })}\r\n        ></textarea>\r\n        <p className=\"input-error\">{formErrors.description}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"people\"\r\n                value={p}\r\n                onChange={handleCheckboxChange}\r\n                checked={formData.people.includes(p)}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"input-error\">{formErrors.people}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={buttonDisabled}\r\n        >\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n/*const notify = () => toast(\"Wow so easy!\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n  } = useForm({\r\n    defaultValues: {\r\n      isim: \"\",\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    submitFn({\r\n      ...formData,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\",\r\n    })\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label>\r\n        Başlık:\r\n        <input\r\n          rows=\"1\"\r\n          id=\"başlık\"\r\n          name=\"başlık\"\r\n          {...register(\"başlık\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Başlık en az 3 karakter içermelidir\",\r\n            },\r\n          })}\r\n        ></input>\r\n      </label>\r\n      {errors.mesaj && <p>{errors.mesaj.message}</p>}\r\n\r\n      <label>\r\n        Açıklama:\r\n        <textarea\r\n          rows=\"3\"\r\n          id=\"açıklama\"\r\n          name=\"açıklama\"\r\n          {...register(\"açıklama\", {\r\n            required: \"Açıklama boş bırakılamaz\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Açıklama en az 10 karakter içermelidir\",\r\n            },\r\n          })}\r\n        ></textarea>\r\n      </label>\r\n      {errors.açıklama && <p>{errors.açıklama.message}</p>}\r\n      <div>\r\n        <button type=\"submit\" disabled={!isValid} onClick={notify}>\r\n          Gönder\r\n        </button>\r\n        <ToastContainer />\r\n      </div>\r\n\r\n      <label>\r\n        İsim:\r\n        <input\r\n          type=\"text\"\r\n          name=\"isim\"\r\n          {...register(\"isim\", { required: \"İsim boş bırakılamaz\" })}\r\n        />\r\n      </label>\r\n      <div>\r\n        <button type=\"submit\" onClick={notify}>\r\n          Gönder\r\n        </button>\r\n        <ToastContainer />\r\n      </div>\r\n\r\n      {errors.isim && <p>{errors.isim.message}</p>}\r\n    </form>\r\n  );*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}